#UPDATE UBUNTU AND THE THINGS

	sudo apt-get update && sudo apt-get upgrade -y

	sudo apt-get install curl nano git libmysqlclient-dev coffeescript gawk g++ gcc make libreadline6-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 autoconf libgmp-dev libgdbm-dev libncurses5-dev automake libtool bison pkg-config libffi-dev -y




#ADD SERVER USER (passenger)

	$	mkdir -p /home/passenger/.ssh
	$	cp /root/.ssh/authorized_keys /home/passenger/.ssh/
	$	useradd -d /home/passenger passenger
	$	usermod -aG sudo passenger
	$	chown -R passenger:passenger /home/passenger/
	$	chown root:root /home/passenger/
	$	chmod 700 /home/passenger/.ssh
	$	chmod 644 /home/passenger/.ssh/authroized_keys
	$	passwd passenger



#INSTALL RVM AND RUBY(ruby takes a while), PULL GITHUB REPO, BUNDLE, CHANGE ENV TO PROD, INSTALL PASSENGER

	$	gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
	$	\curl -sSL https://get.rvm.io | bash -s stable
	$	source /home/passenger/.rvm/scripts/rvm
	$	rvm install 2.3.1
	$	echo 'gem: --no-document' >> ~/.gemrc
	$	gem update --system
	$	gem install bundler
	$	git config --global user.email 'YOUR_EMAIL'
	$	git config --global user.name 'YOUR_NAME'
	$	ssh-keygen -t rsa -C "YOUR_EMAIL"
	$	cat ~/.ssh/id_rsa.pub
	$	git clone git@github.com:driftingruby/sample_application.git
	$	cd sample_application
	$	bundle
	$	echo 'export RAILS_ENV=production' >> ~/.bashrc
	$	source ~/.bashrc
	$	gem install passenger




#INSTALL PASSENGER DEPENDENCIES

	sudo apt-get install apache2 libcurl4-openssl-dev apache2-dev libapr1-dev libaprutil1-dev




#GET PRODUCTION SECRET AND DO THE NEXT THING

     $ bundle exect rake secret



#TAKE THAT SECRET AND PUT IT IN ENV VARIABLE....or unsecurely in your secrets.yml hardcoded LIKE A NOOB (include it in your .gitignore at least)

	nano config/database.yml
	nano config/secrets.yml





#LONG INSTALL HERE - CONNECTING PASSENGER AND APACHE

	sudo a2enmod headers
	passenger-install-apache2-module





#PASTE THIS @ /etc/apache2/apache2.conf   ///technically you should paste the one you get from the above action ^^^

   LoadModule passenger_module /home/passenger/.rvm/gems/ruby-2.3.1/gems/passenger-5.0.28/buildout/apache2/mod_passenger.so
   <IfModule mod_passenger.c>
     PassengerRoot /home/passenger/.rvm/gems/ruby-2.3.1/gems/passenger-5.0.28
     PassengerDefaultRuby /home/passenger/.rvm/gems/ruby-2.3.1/wrappers/ruby
   </IfModule>





#CONFIGURE APACHE VHOST @ /etc/apache2/sites-enabled/000-default.conf

	

	PassengerMaxPoolSize 4
	  <VirtualHost *:80>
	      Header add Strict-Transport-Security max-age=31536000
	      DocumentRoot /home/passenger/sample_application/public
	      <Directory /home/passenger/sample_application/public>
	         Header unset ETag
	         AllowOverride all
	         Options -MultiViews
	         Order allow,deny
	         Allow from all
	         Require all granted
	      </Directory>
	      PassengerMinInstances 2
	  </VirtualHost>




#IF YOU NEED TO USE SSL

	$	sudo mkdir /etc/apache2/ssl
	$	cd /etc/apache2/ssl

	SOMETHING SOMETHING PUT YOUR LET'SENCRYPT CERTBOT SOMETHING SOMETHING HERE

	$	sudo a2enmod ssl
	$	sudo a2enmod rewrite





#SET UP SSL VHOST AND FORWARD ALL PORT80 TRAFFIC TO 443   @ /etc/apache2/sites-enabled/000-default.conf

	
	# Redirects 80 traffic to 443 
	<VirtualHost *:80>
	    Redirect permanent "/" "https://107.170.118.82/"
	</VirtualHost>

	<VirtualHost *:443>
	    Header add Strict-Transport-Security max-age=31536000
	    DocumentRoot /home/deploy/sample_application/public
	    <Directory /home/deploy/sample_application/public>
	       Header unset ETag
	       AllowOverride all
	       Options -MultiViews
	       Order allow,deny
	       Allow from all
	       Require all granted
	    </Directory>
	    SSLEngine on
	    SSLCertificateFile /etc/apache2/ssl/apache.crt
	    SSLCertificateKeyFile /etc/apache2/ssl/apache.key
	    PassengerMinInstances 2
	</VirtualHost>